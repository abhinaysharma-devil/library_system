<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <link rel="stylesheet" href="../assets/index-style.css">
  <link rel="stylesheet" href="../assets/nav-footer-style.css">
  <link rel="stylesheet" href="../assets/index-style.css" src="">
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Comic+Neue&display=swap" rel="stylesheet">
</head>

<body>
  <%-include('../static/nav.ejs')%>
    <main>
      <div class="img">
        <img src="../assets/download.png" id="bookpng" />
      </div>
      <div class="log-sign-div">
        <button id="login-btn"><a class="log-sign-class" href="login">login</a></button>
        <script type="module">

import { initializeApp } from "https://www.gstatic.com/firebasejs/9.8.3/firebase-app.js";
import { getAuth, signInWithPopup, GoogleAuthProvider, FacebookAuthProvider } from "https://www.gstatic.com/firebasejs/9.8.3/firebase-auth.js";
import { getAnalytics } from "https://www.gstatic.com/firebasejs/9.8.3/firebase-analytics.js";
import dotenv from '../package.json/dotenv'

dotenv.config()

const firebaseConfig = {
  apiKey: process.env.API_KEY,
  authDomain: process.env.AUTH_DOM,
  projectId: "dooms-library",
  storageBucket: "dooms-library.appspot.com",
  messagingSenderId: process.env.M_ID,
  appId: process.env.APP_ID,
  measurementId: process.env.M_ID
};


const app = initializeApp(firebaseConfig);
// const auth = app.getAuth(app)
const auth = getAuth();

const p = new GoogleAuthProvider(app);
const provider = new FacebookAuthProvider();
provider.setCustomParameters({
       'display': 'popup'
    });


    
    document.getElementById("swithgoogle").addEventListener('click', function signupwithgoogle() {
      // var gap = new app.auth.GoogleAuthProvider()
      signInWithPopup(auth, p)
.then((result) => {
// This gives you a Google Access Token. You can use it to access the Google API.
const credential = GoogleAuthProvider.credentialFromResult(result);
const token = credential.accessToken;
// The signed-in user info.
const user = result.user;
// ...
}).catch((error) => {
// Handle Errors here.
const errorCode = error.code;
const errorMessage = error.message;
// The email of the user's account used.
const email = error.customData.email;
// The AuthCredential type that was used.
const credential = GoogleAuthProvider.credentialFromError(error);
// ...
});


document.getElementById("swithfb").addEventListener('click', function signupwithfb() {
      // var gap = new app.auth.GoogleAuthProvider()
      signInWithPopup(auth, provider)
.then((result) => {
// The signed-in user info.
const user = result.user;

// This gives you a Facebook Access Token. You can use it to access the Facebook API.
const credential = FacebookAuthProvider.credentialFromResult(result);
const accessToken = credential.accessToken;

// ...
})
.catch((error) => {
// Handle Errors here.
const errorCode = error.code;
const errorMessage = error.message;
// The email of the user's account used.
const email = error.customData.email;
// The AuthCredential type that was used.
const credential = FacebookAuthProvider.credentialFromError(error);

console.log(errorMessage)
});
      
});

})

        </script>
        <button class="s-class" id="swithgoogle">google</button>
        <button class="s-class" id="swithfb">facebook</button>
        <button id="signup-btn"><a class="log-sign-class" href="signup">signup</a></button>
      </div>
    </main>
    <%-include('../static/footer.ejs')%>
</body>

</html>